<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SadConsole.Extended</name>
    </assembly>
    <members>
        <member name="T:SadConsole.Components.C64KeyboardHandler">
            <summary>
            A console prompt keyboard handler that acts like the text editor on the Commodore 64 and VIC-20 computers.
            </summary>
            <remarks>
            This handler lets the user move the cursor with the keyboard arrow keys. When the <kbd>ENTER</kbd> key is pressed, the current line is sent to the <see cref="F:SadConsole.Components.C64KeyboardHandler.EnterPressedAction"/> callback. All empty characters are trimmed from the start and end of the string.
            </remarks>
        </member>
        <member name="P:SadConsole.Components.C64KeyboardHandler.Prompt">
            <summary>
            The prompt to display to the user.
            </summary>
        </member>
        <member name="P:SadConsole.Components.C64KeyboardHandler.EraseGlyph">
            <summary>
            The glyph to print when erasing a character, such as when the backspace key is pressed to erase a character.
            </summary>
        </member>
        <member name="P:SadConsole.Components.C64KeyboardHandler.ReplaceEmptyGlyph">
            <summary>
            The glyph used to replace the empty characters that may be in the string sent to <see cref="F:SadConsole.Components.C64KeyboardHandler.EnterPressedAction"/>.
            </summary>
        </member>
        <member name="F:SadConsole.Components.C64KeyboardHandler.EnterPressedAction">
            <summary>
            This is a callback for the owner of this keyboard handler. When it returns <see langword="true"/>, the handler will print the prompt. The parameters are the component itself, the <see cref="T:SadConsole.Components.Cursor"/> used by the handler, and the string input by the user. It's called when the user presses ENTER.
            </summary>
        </member>
        <member name="M:SadConsole.Components.C64KeyboardHandler.#ctor(System.String)">
            <summary>
            Creates a new keyboard handler with the specified prompt.
            </summary>
            <param name="prompt">The prompt to display to the user.</param>
        </member>
        <member name="M:SadConsole.Components.C64KeyboardHandler.OnAdded(SadConsole.IScreenObject)">
             <summary>
             Called when this component is added to an object with a cursor; caches reference to the cursor.
             </summary>
             <param name="host">The host object for the component.</param>
             <remarks>
             Makes the cursor visible, disables word breaks and the string parser, and prints the prompt.
            
             If the host is a <see cref="T:SadConsole.Console"/>, it uses the <see cref="F:SadConsole.Components.C64KeyboardHandler._attachedCursor"/> property, caching reference to it.
             You can't change the cursor reference unless you re-add this component. If the host is a <see cref="T:SadConsole.IScreenObject"/>,
             the first instance of a cursor in the <see cref="P:SadConsole.Components.IComponentHost.SadComponents"/> collection is used.
             If there is no cursor, an exception is thrown.
             </remarks>
        </member>
        <member name="M:SadConsole.Components.C64KeyboardHandler.PrintPrompt">
            <summary>
            Prints the prompt at the cursors current position.
            </summary>
        </member>
        <member name="M:SadConsole.Components.C64KeyboardHandler.ProcessKeyboard(SadConsole.IScreenObject,SadConsole.Input.Keyboard,System.Boolean@)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.Components.ClassicConsoleKeyboardHandler">
            <summary>
            A classic console/terminal prompt keyboard handler.
            </summary>
        </member>
        <member name="P:SadConsole.Components.ClassicConsoleKeyboardHandler.IsReady">
            <summary>
            A flag that when set to true prints a new line and the prompt.
            </summary>
        </member>
        <member name="P:SadConsole.Components.ClassicConsoleKeyboardHandler.Prompt">
            <summary>
            The prompt to display to the user.
            </summary>
        </member>
        <member name="P:SadConsole.Components.ClassicConsoleKeyboardHandler.EraseGlyph">
            <summary>
            The glyph to print when erasing a character, such as when the backspace key is pressed to erase a character.
            </summary>
        </member>
        <member name="P:SadConsole.Components.ClassicConsoleKeyboardHandler.ReplaceEmptyGlyph">
            <summary>
            The glyph used to replace the empty characters that may be in the string sent to <see cref="F:SadConsole.Components.ClassicConsoleKeyboardHandler.EnterPressedAction"/>.
            </summary>
        </member>
        <member name="P:SadConsole.Components.ClassicConsoleKeyboardHandler.CursorLastY">
            <summary>
            This holds the row that the virtual cursor is starting from when someone is typing.
            </summary>
        </member>
        <member name="F:SadConsole.Components.ClassicConsoleKeyboardHandler.EnterPressedAction">
            <summary>
            This is a callback for the owner of this keyboard handler. The parameters are the component itself, the <see cref="T:SadConsole.Components.Cursor"/> used by the handler, and the string input by the user. It's called when the user presses ENTER.
            </summary>
        </member>
        <member name="M:SadConsole.Components.ClassicConsoleKeyboardHandler.#ctor(System.String)">
            <summary>
            Creates the handler with the specified prompt.
            </summary>
            <param name="prompt">The prompt to display to the user.</param>
        </member>
        <member name="M:SadConsole.Components.ClassicConsoleKeyboardHandler.OnAdded(SadConsole.IScreenObject)">
             <summary>
             Called when this component is added to an object with a cursor; caches reference to the cursor.
             </summary>
             <param name="host">The host object for the component.</param>
             <remarks>
             Makes the cursor visible, disables word breaks and the string parser, and prints the prompt.
            
             If the host is a <see cref="T:SadConsole.Console"/>, it uses the <see cref="F:SadConsole.Components.ClassicConsoleKeyboardHandler._attachedCursor"/> property, caching reference to it. You can't change the cursor reference unless you re-add this component. If the host is a <see cref="T:SadConsole.IScreenObject"/>, the first instance of a cursor in the <see cref="!:IScreenObject.SadComponents"/> collection is used. If there is no cursor, an exception is thrown.
             </remarks>
        </member>
        <member name="M:SadConsole.Components.ClassicConsoleKeyboardHandler.PrintPrompt">
            <summary>
            Prints the prompt and locks the cursor to the column that ends at the prompt.
            </summary>
        </member>
        <member name="M:SadConsole.Components.ClassicConsoleKeyboardHandler.ProcessKeyboard(SadConsole.IScreenObject,SadConsole.Input.Keyboard,System.Boolean@)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.Components.MouseTint">
            <summary>
            Tints a surface when that surface would use the mouse. Helps debug which object is receiving mouse input as you move the mouse around.
            </summary>
        </member>
        <member name="M:SadConsole.Components.MouseTint.OnAdded(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.MouseTint.Update(SadConsole.IScreenObject,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.Components.MoveViewPortKeyboardHandler">
            <summary>
            Moves the view of an <see cref="T:SadConsole.IScreenSurface"/> with a set of specified keyboard keys.
            </summary>
        </member>
        <member name="P:SadConsole.Components.MoveViewPortKeyboardHandler.Left">
            <summary>
            The key to move left.
            </summary>
        </member>
        <member name="P:SadConsole.Components.MoveViewPortKeyboardHandler.Right">
            <summary>
            The key to move right.
            </summary>
        </member>
        <member name="P:SadConsole.Components.MoveViewPortKeyboardHandler.Up">
            <summary>
            The key to move up.
            </summary>
        </member>
        <member name="P:SadConsole.Components.MoveViewPortKeyboardHandler.Down">
            <summary>
            The key to move down.
            </summary>
        </member>
        <member name="M:SadConsole.Components.MoveViewPortKeyboardHandler.#ctor">
            <summary>
            Creates this handler with the arrow keys.
            </summary>
        </member>
        <member name="M:SadConsole.Components.MoveViewPortKeyboardHandler.#ctor(SadConsole.Input.Keys,SadConsole.Input.Keys,SadConsole.Input.Keys,SadConsole.Input.Keys)">
            <summary>
            Creates this handler with the specified keys.
            </summary>
            <param name="left">The key to move left.</param>
            <param name="right">The key to move right.</param>
            <param name="up">The key to move up.</param>
            <param name="down">The key to move down.</param>
        </member>
        <member name="M:SadConsole.Components.MoveViewPortKeyboardHandler.OnAdded(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.MoveViewPortKeyboardHandler.ProcessKeyboard(SadConsole.IScreenObject,SadConsole.Input.Keyboard,System.Boolean@)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.Components.SmoothMove">
            <summary>
            Animates the movement of an object. 
            </summary>
        </member>
        <member name="P:SadConsole.Components.SmoothMove.IsMoving">
            <summary>
            <see langword="true"/> when this component currently is animating the movement of the host object; otherwise <see langword="false"/>.
            </summary>
        </member>
        <member name="E:SadConsole.Components.SmoothMove.MoveStarted">
            <summary>
            Raised when the smoothing component starts moving an object.
            </summary>
        </member>
        <member name="E:SadConsole.Components.SmoothMove.MoveEnded">
            <summary>
            Raised when the smoothing component ends moving an object.
            </summary>
        </member>
        <member name="P:SadConsole.Components.SmoothMove.FontSize">
            <summary>
            The size of the parent object's font.
            </summary>
        </member>
        <member name="P:SadConsole.Components.SmoothMove.IsEnabled">
            <summary>
            <see langword="false"/> to pause this component and prevent it from animating movement; otherwise <see langword="true"/> to enable animating movement.
            </summary>
        </member>
        <member name="P:SadConsole.Components.SmoothMove.TransitionEasingFunction">
            <summary>
            The easing function applied to smoothing the objects movement.
            </summary>
        </member>
        <member name="P:SadConsole.Components.SmoothMove.TransitionTime">
            <summary>
            The amount of time it takes to animated the movement.
            </summary>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.#ctor">
            <summary>
            Creates a new instance of this object with a default transition time of 200 milliseconds.
            </summary>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.#ctor(SadRogue.Primitives.Point)">
            <summary>
            Creates a new instance of this object with a fixed size for calculating smooth movement.
            </summary>
            <param name="fontSize">The size of the font used to display the object hosting the component.</param>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.#ctor(System.TimeSpan)">
            <summary>
            Creates a new instance of this object with a specific transition time.
            </summary>
            <param name="transitionTime">The amount of time it takes to animate the movement.</param>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.#ctor(SadRogue.Primitives.Point,System.TimeSpan)">
            <summary>
            Creates a new instance of this object with a fixed size for calculating smooth movement and the specified transition time.
            </summary>
            <param name="fontSize">The size of the font used to display the object hosting the component.</param>
            <param name="transitionTime">The amount of time it takes to animate the movement.</param>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.OnAdded(SadConsole.IScreenObject)">
            <summary>
            Called by the <paramref name="host"/> when the component is added to an object. Add to a <see cref="T:SadConsole.IScreenSurface"/> or <see cref="T:SadConsole.Entities.Entity"/>.
            </summary>
            <param name="host">The <see cref="T:SadConsole.IScreenSurface"/> or <see cref="T:SadConsole.Entities.Entity"/>.</param>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.OnRemoved(SadConsole.IScreenObject)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Components.SmoothMove.Update(SadConsole.IScreenObject,System.TimeSpan)">
            <summary>
            Updates the component. If the object is moving, changes to pixel positioning (if required) and animates the movement.
            </summary>
            <param name="host">The host object being moved.</param>
            <param name="delta">The time difference from the previous frame.</param>
        </member>
        <member name="T:SadConsole.Entities.EntityManagerZoned">
            <summary>
            Manages a set of entities. Adds a render step and only renders the entities that are in the parent <see cref="T:SadConsole.IScreenSurface"/> visible area.
            </summary>
        </member>
        <member name="E:SadConsole.Entities.EntityManagerZoned.EnterZone">
            <summary>
            An event to indicate that an entity entered a zone.
            </summary>
        </member>
        <member name="E:SadConsole.Entities.EntityManagerZoned.ExitZone">
            <summary>
            An event to indicate that an entity exited a zone.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.EntityManagerZoned._zones">
            <summary>
            The zones in this manager.
            </summary>
        </member>
        <member name="P:SadConsole.Entities.EntityManagerZoned.Zones">
            <summary>
            The zones associated with this manager.
            </summary>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.#ctor">
            <summary>
            Creates a new manager to handle entity movement within zones.
            </summary>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.Add(SadConsole.Entities.Zone)">
            <summary>
            Adds a zone to this manager.
            </summary>
            <param name="zone">The zone to add.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.Remove(SadConsole.Entities.Zone)">
            <summary>
            Removes a zone from this manager.
            </summary>
            <param name="zone">The hotspot to remove.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.Contains(SadConsole.Entities.Zone)">
            <summary>
            Checks if the manager contains the specified zone.
            </summary>
            <param name="zone">The zone to check for.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.GetEntityAtPosition(SadRogue.Primitives.Point)">
            <summary>
            Returns an entity at the specified position or <see langword="null"/> if there is no entity. If there are multiple entities at the specified position, only one of them is returned.
            </summary>
            <param name="position">The position to get an entity at.</param>
            <returns>The entity if it exists; otherwise it returns <see langword="null"/>.</returns>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.GetEntitiesAtPosition(SadRogue.Primitives.Point)">
            <summary>
            Returns an enumerator containing the entities, if any, at the specified position.
            </summary>
            <param name="position">The position to get an entity at.</param>
            <returns>An array of entities if they exist; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.HasEntityAt(SadRogue.Primitives.Point)">
            <summary>
            Returns <see langword="true"/> when there is an entity at the specified position; otherwise <see langword="false"/>.
            </summary>
            <param name="position">The position to check.</param>
            <returns>A value indicating if an entity exists.</returns>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.GetZonesAtPosition(SadRogue.Primitives.Point)">
            <summary>
            Returns a collection of zones at the specified position.
            </summary>
            <param name="position">The position to check for zones.</param>
            <returns>Every zone that contains the position.</returns>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.GetEntitiesInZone(SadConsole.Entities.Zone)">
            <summary>
            Returns a list of entities that are located in the specified zone.
            </summary>
            <param name="zone">The zone to filter entities by.</param>
            <returns>A list of entities.</returns>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.OnEntityChangedPosition(SadConsole.Entities.Entity,SadRogue.Primitives.ValueChangedEventArgs{SadRogue.Primitives.Point})">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.OnEntityAdded(SadConsole.Entities.Entity)">
            <summary>
            Adds entity state information to an entity when it's added.
            </summary>
            <param name="entity">The entity that was added.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.OnEntityRemoved(SadConsole.Entities.Entity)">
            <summary>
            Removes the entity state information of an entity being removed.
            </summary>
            <param name="entity">The entity that was removed.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.OnEntityEnterZone(SadConsole.IScreenSurface,SadConsole.Entities.Zone,SadConsole.Entities.Entity,SadRogue.Primitives.Point)">
            <summary>
            Called when an entity enters a zone and raises the <see cref="E:SadConsole.Entities.EntityManagerZoned.EnterZone"/> event.
            </summary>
            <param name="host">The host that the zone and entity share.</param>
            <param name="zone">The zone the entity entered.</param>
            <param name="entity">The entity that entered the zone.</param>
            <param name="triggeredPosition">The position the entity entered.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.OnEntityExitZone(SadConsole.IScreenSurface,SadConsole.Entities.Zone,SadConsole.Entities.Entity,SadRogue.Primitives.Point)">
            <summary>
            Called when an entity enters a zone and raises the <see cref="E:SadConsole.Entities.EntityManagerZoned.ExitZone"/> event.
            </summary>
            <param name="host">The host that the zone and entity share.</param>
            <param name="zone">The zone the entity exited.</param>
            <param name="entity">The entity that exited the zone.</param>
            <param name="triggeredPosition">The new position the entity left.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.OnEntityMoveZone(SadConsole.IScreenSurface,SadConsole.Entities.Zone,SadConsole.Entities.Entity,SadRogue.Primitives.Point,SadRogue.Primitives.Point)">
            <summary>
            Called when an entity moves within a zone.
            </summary>
            <param name="host">The host that the zone and entity share.</param>
            <param name="zone">The zone the entity moved in.</param>
            <param name="entity">The entity that moved in the zone.</param>
            <param name="newPosition">The position the entity moved to.</param>
            <param name="oldPosition">The position the entity moved from.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.GetZonesAtPosition(SadRogue.Primitives.Point@,System.Collections.Generic.HashSet{SadConsole.Entities.Zone}@)">
            <summary>
            Gets the zones that contain the specified position.
            </summary>
            <param name="point">The position to check.</param>
            <param name="zones">The zones that contain this position.</param>
            <returns><see langword="true"/> when at least one zone was found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.DisableEntity(SadConsole.Entities.Entity)">
            <summary>
            Prevents an entity from being processed with the <see cref="P:SadConsole.Entities.EntityManagerZoned.Zones"/>.
            </summary>
            <param name="entity">The entity to disable.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.EnableEntity(SadConsole.Entities.Entity)">
            <summary>
            Enables the entity to be processed with with the <see cref="P:SadConsole.Entities.EntityManagerZoned.Zones"/>.
            </summary>
            <param name="entity">The entity to disable.</param>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.IsEntityDisabled(SadConsole.Entities.Entity)">
            <summary>
            Returns <see langword="true"/> when the entity has been disabled by <see cref="M:SadConsole.Entities.EntityManagerZoned.DisableEntity(SadConsole.Entities.Entity)"/>; otherwise <see langword="false"/>.
            </summary>
            <param name="entity">The entity to check.</param>
            <returns><see langword="true"/> when the entity is disabled.</returns>
        </member>
        <member name="T:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs">
            <summary>
            Contains event data for a <see cref="F:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.Zone"/> and <see cref="F:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.Entity"/> interaction.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.Zone">
            <summary>
            The zone associated with the event.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.Entity">
            <summary>
            The entity associated with the event.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.Host">
            <summary>
            The host that the zone and entity share.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.TriggeredPosition">
            <summary>
            The position within the zone associated with the event.
            </summary>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.ZoneEventArgs.#ctor(SadConsole.IScreenSurface,SadConsole.Entities.Zone,SadConsole.Entities.Entity,SadRogue.Primitives.Point)">
            <summary>
            Creates a new event args for a zone interaction.
            </summary>
            <param name="host">The host that the zone and entity share.</param>
            <param name="zone">The zone associated with the event.</param>
            <param name="entity">The entity associated with the event.</param>
            <param name="triggeredPosition">The new position within the zone associated with the event.</param>
        </member>
        <member name="T:SadConsole.Entities.EntityManagerZoned.ZoneMoveEventArgs">
            <summary>
            Contains event data for a <see cref="T:SadConsole.Entities.Zone"/> and <see cref="T:SadConsole.Entities.Entity"/> interaction.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.EntityManagerZoned.ZoneMoveEventArgs.MovedFromPosition">
            <summary>
            The position within the zone that the entity moved from.
            </summary>
        </member>
        <member name="M:SadConsole.Entities.EntityManagerZoned.ZoneMoveEventArgs.#ctor(SadConsole.IScreenSurface,SadConsole.Entities.Zone,SadConsole.Entities.Entity,SadRogue.Primitives.Point,SadRogue.Primitives.Point)">
            <summary>
            Creates a new event args for a zone movement event.
            </summary>
            <param name="host">The host that the zone and entity share.</param>
            <param name="zone">The zone associated with the event.</param>
            <param name="entity">The entity associated with the event.</param>
            <param name="triggeredPosition">The new position within the zone associated with the event.</param>
            <param name="movedFromPosition">The position within the zone that the entity moved from.</param>
        </member>
        <member name="T:SadConsole.Entities.Zone">
            <summary>
            Defines an area for a scene.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.Zone.Area">
            <summary>
            The area the zone covers.
            </summary>
        </member>
        <member name="P:SadConsole.Entities.Zone.Appearance">
            <summary>
            A visual for the area to help debug.
            </summary>
        </member>
        <member name="P:SadConsole.Entities.Zone.Name">
            <summary>
            The name of the zone.
            </summary>
        </member>
        <member name="F:SadConsole.Entities.Zone.Settings">
            <summary>
            Key-value pairs for the zone.
            </summary>
        </member>
        <member name="P:SadConsole.Entities.Zone.Entities">
            <summary>
            A list of entities in the 
            </summary>
        </member>
        <member name="M:SadConsole.Entities.Zone.#ctor(SadRogue.Primitives.Area)">
            <summary>
            Creates a new zone object with the specified area.
            </summary>
            <param name="area">The area of the zone.</param>
        </member>
        <member name="M:SadConsole.Entities.Zone.#ctor(SadRogue.Primitives.Rectangle)">
            <summary>
            Creates a new zone object using the positions of a rectangle.
            </summary>
            <param name="area">The area of the zone.</param>
        </member>
        <member name="M:SadConsole.Entities.Zone.#ctor(System.Collections.Generic.IEnumerable{SadRogue.Primitives.Point})">
            <summary>
            Creates a new zone object using the specified positions.
            </summary>
            <param name="positions">The positions that make up the zone.</param>
        </member>
        <member name="M:SadConsole.Entities.Zone.ToString">
            <summary>
            Returns the string "Zone - " followed by the <see cref="P:SadConsole.Entities.Zone.Name"/> of the zone. If the name is empty, appends the <see cref="F:SadConsole.Entities.Zone.Area"/> bounds.
            </summary>
            <returns>The name of the zone.</returns>
        </member>
        <member name="T:SadConsole.StringExtensions2">
            <summary>
            Extensions for the <see cref="T:System.String"/> type.
            </summary>
        </member>
        <member name="M:SadConsole.StringExtensions2.ToAscii(System.String,System.Int32)">
            <summary>
            Converts a string into codepage 437.
            </summary>
            <param name="text">The string to convert</param>
            <param name="codepage">Optional codepage to provide.</param>
            <returns>A transformed string.</returns>
        </member>
        <member name="T:SadConsole.SurfaceExtensions">
            <summary>
            Extensions for the <see cref="T:SadConsole.IScreenSurface"/> type
            </summary>
        </member>
        <member name="M:SadConsole.SurfaceExtensions.PrintFadingText(SadConsole.IScreenSurface,System.String,SadRogue.Primitives.Point,System.TimeSpan,SadConsole.Effects.ICellEffect)">
            <summary>
            Prints text that blinks out the characters each after the specified time, using the default foreground and background colors of the surface.
            </summary>
            <param name="surfaceObject">The surface to draw the text on.</param>
            <param name="text">The text to print.</param>
            <param name="position">The position where to print the text.</param>
            <param name="time">The time each glyph (one after the other) takes to print then fade.</param>
            <param name="effect">Optional effect to use. If <see langword="null"/> is passed, uses an instant fade.</param>
        </member>
        <member name="M:SadConsole.SurfaceExtensions.PrintFadingText(SadConsole.IScreenSurface,SadConsole.ColoredString,SadRogue.Primitives.Point,System.TimeSpan,SadConsole.Effects.ICellEffect)">
            <summary>
            
            </summary>
            <param name="surfaceObject">The surface to draw the text on.</param>
            <param name="text">The text to print.</param>
            <param name="position">The position where to print the text.</param>
            <param name="time">The time each glyph (one after the other) takes to print then fade.</param>
            <param name="effect">Optional effect to use. If <see langword="null"/> is passed, uses an instant fade.</param>
        </member>
        <member name="T:SadConsole.Instructions.AnimatedBoxGrow">
            <summary>
            Animates drawing a box. It can either 
            </summary>
        </member>
        <member name="T:SadConsole.Transitions.Fade">
            <summary>
            Fades out one <see cref="T:SadConsole.IScreenSurface"/> while fading in another.
            </summary>
        </member>
        <member name="P:SadConsole.Transitions.Fade.DeparentFromObject">
            <summary>
            When <see langword="true"/>, removes the "From" object from the parent when the transition finishes. Supersedes <see cref="P:SadConsole.Transitions.Fade.HideFromObject"/>.
            </summary>
        </member>
        <member name="P:SadConsole.Transitions.Fade.HideFromObject">
            <summary>
            When <see langword="true"/>, sets <see cref="P:SadConsole.IScreenObject.IsVisible"/> to <see langword="false"/> on the "From" object when the transition finishes.
            </summary>
        </member>
        <member name="P:SadConsole.Transitions.Fade.RepositionToObject">
            <summary>
            When <see langword="true"/>, sets the position of the "To" object to match the "From" object when the transition finishes.
            </summary>
        </member>
        <member name="M:SadConsole.Transitions.Fade.#ctor(SadConsole.IScreenSurface,SadConsole.IScreenSurface,System.TimeSpan,SadConsole.EasingFunctions.EasingBase)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="duration"></param>
            <param name="easingFunction"></param>
        </member>
        <member name="M:SadConsole.Transitions.Fade.Update(SadConsole.IScreenObject,System.TimeSpan)">
            <summary>
            Processes the fade between two objects.
            </summary>
            <param name="componentHost">The host running the component.</param>
            <param name="delta">The time difference for the frame.</param>
        </member>
        <member name="T:SadConsole.UI.Border">
            <summary>
            Creates a 3D border around a surface.
            </summary>
        </member>
        <member name="T:SadConsole.UI.Border.BorderParameters">
            <summary>
            The settings to use when creating a <see cref="T:SadConsole.UI.Border"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.DrawBorder">
            <summary>
            When <see langword="true"/>, indicates the <see cref="P:SadConsole.UI.Border.BorderParameters.BorderBox"/> should be used to draw a border.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.BorderBox">
            <summary>
            The border box creation parameters.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.Title">
            <summary>
            The title to display on the border.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.TitleForeground">
            <summary>
            The foreground color of the title.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.TitleBackground">
            <summary>
            The background color of the title.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.TitleAlignment">
            <summary>
            The alignment of the <see cref="P:SadConsole.UI.Border.BorderParameters.Title"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.DrawShadedArea">
            <summary>
            When <see langword="true"/>, indicates the 3d shaded area of the border should be drawn.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.UseDefaultShadedGlyphs">
            <summary>
            When <see langword="true"/>, indicates the  other shaded properties should be ignored and the default shaded glyphs should be used.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.UseDefaultShadedColors">
            <summary>
            When <see langword="true"/>, indicates the other shaded properties should be ignored and the default shaded glyphs should be used.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.ShadedGlyph">
            <summary>
            The glyph to use in the shaded area.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.ShadedGlyphForeground">
            <summary>
            The forground of the <see cref="P:SadConsole.UI.Border.BorderParameters.ShadedGlyph"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Border.BorderParameters.ShadedGlyphBackground">
            <summary>
            The background of the <see cref="P:SadConsole.UI.Border.BorderParameters.ShadedGlyph"/>.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.#ctor(System.Boolean,SadConsole.ShapeParameters,System.String,SadConsole.HorizontalAlignment,SadRogue.Primitives.Color,SadRogue.Primitives.Color,System.Boolean,System.Boolean,System.Boolean,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Creates a new instance of this class which contains the settings for drawing a border surface around an existing surface.
            </summary>
            <param name="drawBorder">When <see langword="true"/>, indicates the <paramref name="borderBox"/> should be used to draw a border.</param>
            <param name="borderBox">The box drawn around the surface.</param>
            <param name="title">The title to display on the border.</param>
            <param name="titleAlignment">The alignment of the <paramref name="title"/>.</param>
            <param name="titleForeground">The foreground color of the <paramref name="title"/>.</param>
            <param name="titleBackground">The background color of the <paramref name="title"/>.</param>
            <param name="drawShadedArea">When <see langword="true"/>, indicates the 3d shaded area of the border should be drawn.</param>
            <param name="useDefaultShadedGlyphs">When <see langword="true"/>, indicates the  other shaded properties should be ignored and the default shaded glyphs should be used.</param>
            <param name="useDefaultShadedColors">When <see langword="true"/>, indicates the other shaded properties should be ignored and the default shaded glyphs should be used.</param>
            <param name="shadedGlyph">The glyph to use in the shaded area.</param>
            <param name="shadedGlyphForeground">The forground of the <paramref name="shadedGlyph"/>.</param>
            <param name="shadedGlyphBackground">The background of the <paramref name="shadedGlyph"/>.</param>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.GetDefault">
            <summary>
            Creates an instance of BorderParameters with the thin line as a border, no title and no shadow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.AddTitle(System.String)">
            <summary>
            Sets the Title parameter with the given text.
            </summary>
            <param name="title">Title text.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.AddTitle(System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.HorizontalAlignment)">
            <summary>
            Sets the Title parameter with the given text and changes title colors.
            </summary>
            <param name="title">Title text.</param>
            <param name="foregroundColor">Title foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="backgroundColor">Title background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="horizontalAlignment">Title text <see cref="T:SadConsole.HorizontalAlignment"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.AddShadow">
            <summary>
            Sets the DrawShadedArea to true.
            </summary>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.AddShadow(System.Int32)">
            <summary>
            Sets the DrawShadedArea to true and modifies shadow glyph.
            </summary>
            <param name="shadedGlyph">Glyph number to use as a shadow.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.AddShadow(SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Sets the DrawShadedArea to true and modifies default shadow colors.
            </summary>
            <param name="foregroundColor">ShadedGlyph new foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="backgroundColor">ShadedGlyph new background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.AddShadow(System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Sets the DrawShadedArea to true and modifies default shadow glyph and colors.
            </summary>
            /// <param name="shadedGlyph">Glyph number to use as a shadow.</param>
            <param name="foregroundColor">ShadedGlyph new foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="backgroundColor">ShadedGlyph new background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderStyle(SadConsole.ShapeParameters)">
            <summary>
            Set the BorderBox parameter to the new value.
            </summary>
            <param name="borderStyle">New <see cref="T:SadConsole.ShapeParameters"/> to use for the border style.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderGlyph(System.Int32[])">
            <summary>
            Changes the array of glyphs to be used as the border line.
            </summary>
            <param name="borderStyle">Array of glyphs to be used as the border line.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderGlyph(System.Int32[],SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Changes the array of glyphs to be used as the border line and their colors.
            </summary>
            <param name="borderStyle">Array of glyphs to be used as the border line.</param>
            <param name="foregroundColor">Border line foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="backgroundColor">Border line background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderGlyph(System.Int32)">
            <summary>
            Fills the array of glyphs to be used as the border line with the given glyph.
            </summary>
            <param name="glyph">The glyph to be used the border line.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderGlyph(System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Fills the array of glyphs to be used as the border line with the given glyph and changes the border colors.
            </summary>
            <param name="glyph">The glyph to be used the border line.</param>
            <param name="foregroundColor">Border line foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="backgroundColor">Border line background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderGlyph(SadConsole.ColoredGlyphBase)">
            <summary>
            Fills the array of glyphs to be used as the border line with the given <see cref="T:SadConsole.ColoredGlyphBase"/>.
            </summary>
            <param name="glyph">The <see cref="T:SadConsole.ColoredGlyphBase"/> to be used the border line.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderColors(SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Changes border color parameters.
            </summary>
            <param name="foregroundColor">Border line foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <param name="backgroundColor">Border line background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderForegroundColor(SadRogue.Primitives.Color)">
            <summary>
            Changes border foreground color.
            </summary>
            <param name="foregroundColor">Border line foreground <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.BorderParameters.ChangeBorderBackgroundColor(SadRogue.Primitives.Color)">
            <summary>
            Changes border background color.
            </summary>
            <param name="backgroundColor">Border line background <see cref="T:SadRogue.Primitives.Color"/>.</param>
            <returns>The modified instance of <see cref="T:SadConsole.UI.Border.BorderParameters"/>.</returns>
        </member>
        <member name="M:SadConsole.UI.Border.#ctor(SadConsole.IScreenSurface,SadConsole.UI.Border.BorderParameters,SadConsole.IFont)">
            <summary>
            Creates a border and adds it as a child object to <paramref name="contents"/>.
            </summary>
            <param name="contents">The object the border will be around.</param>
            <param name="parameters"><see cref="T:SadConsole.UI.Border.BorderParameters"/> to be used in creating the <see cref="T:SadConsole.UI.Border"/>.</param>
            <param name="font">Optional <see cref="T:SadConsole.IFont"/> for the border <see cref="T:SadConsole.CellSurface"/>.</param>
        </member>
        <member name="M:SadConsole.UI.Border.#ctor(SadConsole.IScreenSurface,System.String)">
            <summary>
            Creates a border (with a shadow and a title) and adds it as a child object to <paramref name="contents"/>.
            </summary>
            <param name="contents">The object the border will be around.</param>
            <param name="title">Title to display on the border.</param>
        </member>
        <member name="M:SadConsole.UI.Border.#ctor(SadConsole.IScreenSurface,System.String,SadRogue.Primitives.Color,SadRogue.Primitives.Color)">
            <summary>
            Creates a border (with a shadow and a title) and adds it as a child object to <paramref name="contents"/>.
            </summary>
            <param name="contents">The object the border will be around.</param>
            <param name="title">Optional title to display on the border.</param>
            <param name="textColor">Title text foreground color.</param>
            <param name="borderColor">Border line foreground color and title text background color.</param>
        </member>
        <member name="M:SadConsole.UI.Border.#ctor(SadConsole.UI.Window)">
            <summary>
            Creates a border and adds it as a child object to the window.
            </summary>
            <param name="contents">The window the border will be around.</param>
        </member>
        <member name="M:SadConsole.UI.Border.Create3DForSurface(SadConsole.IScreenSurface,System.String,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color})">
            <summary>
            Creates a chunky 3d border using <see cref="P:SadConsole.ICellSurface.Connected3dBox"/> glyphs.
            </summary>
            <param name="contents">The object the border will be around.</param>
            <param name="title">Optional title to display on the border.</param>
            <param name="titleForeground">Foreground color of the title. Defaults to a brighter version of the content's <see cref="P:SadConsole.ICellSurface.DefaultBackground"/>.</param>
            <param name="titleBackground">Background color of the title. Defaults to the content's <see cref="P:SadConsole.ICellSurface.DefaultForeground"/>.</param>
            <param name="borderBrightColor">The bright color of the 3D border. Defaults to <see cref="F:SadRogue.Primitives.Color.AnsiWhiteBright"/>.</param>
            <param name="borderDarkColor">The dark color of the 3D border. Defaults to <see cref="F:SadRogue.Primitives.Color.AnsiBlackBright"/>.</param>
            <param name="borderBetweenColor">The corner color of the 3D border. Defaults to the content's <see cref="P:SadConsole.ICellSurface.DefaultBackground"/>.</param>
            <returns>The created border, attached to the content.</returns>
            <remarks>
            For a nice looking border, set the content's <see cref="P:SadConsole.ICellSurface.DefaultForeground"/> to <see cref="F:SadRogue.Primitives.Color.AnsiWhite"/> and the <see cref="P:SadConsole.ICellSurface.DefaultBackground"/> to <see cref="F:SadRogue.Primitives.Color.AnsiBlue"/>, before calling this method.
            </remarks>
        </member>
        <member name="M:SadConsole.UI.Border.CreateForSurface(SadConsole.IScreenSurface,System.String)">
            <summary>
            Helper method to add a border to a surface.
            </summary>
            <param name="contents">The object the border will be around.</param>
            <param name="title">Optional title to display on the border.</param>
        </member>
        <member name="M:SadConsole.UI.Border.CreateForWindow(SadConsole.UI.Window)">
            <summary>
            Helper method to add a border to a window.
            </summary>
            <param name="contents">The window the border will be around.</param>
        </member>
        <member name="T:SadConsole.UI.Controls.CharacterPicker">
            <summary>
            Displays the glyphs associated with a font and allows the user to select one.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.CharacterPicker.SelectedCharacterChanged">
            <summary>
            Raised when the <see cref="P:SadConsole.UI.Controls.CharacterPicker.SelectedCharacter"/> property changes.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.UseFullClick">
            <summary>
            When <see langword="true"/>, indicates that the control should use a mouse click to select a new character; otherwise <see langword="false"/> to indicate that just having the mouse down will select a new character.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.OldCharacterLocation">
            <summary>
            Gets the position of the previously selected character. Used by the theme.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.NewCharacterLocation">
            <summary>
            Gets the position of the newly selected character. Used by the theme.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.MirrorSetting">
            <summary>
            Gets or sets the mirror effect to apply in the theme.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.HighlightSelectedCharacter">
            <summary>
            When true, highlights the selected character with <see cref="P:SadConsole.UI.Controls.CharacterPicker.SelectedGlyphForeground"/> when <see cref="P:SadConsole.UI.Controls.CharacterPicker.HighlightSelectedCharacterWithEffect"/> is false;
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.HighlightSelectedCharacterWithEffect">
            <summary>
            When true, uses <see cref="P:SadConsole.UI.Controls.CharacterPicker.SelectedGlyphEffect"/> to highlight the character.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.GlyphForeground">
            <summary>
            Gets the foreground color used when drawing the glyphs.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.GlyphBackground">
            <summary>
            Gets the background color used when drawing the glyphs.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.SelectedGlyphForeground">
            <summary>
            Gets the foreground color used when drawing the selected glyph.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.SelectedGlyphEffect">
            <summary>
            Gets the effect to apply when drawing the selected glyph.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.CharacterPicker.SelectedCharacter">
            <summary>
            Gets or sets the selected glyph character.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.CharacterPicker.#ctor(SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadRogue.Primitives.Color,SadConsole.SadFont,System.Int32,System.Int32)">
            <summary>
            Creates a new picker control with the specified font.
            </summary>
            <param name="foreground">The default foreground for glyphs.</param>
            <param name="fill">The default backround for glyphs.</param>
            <param name="selectedCharacterColor">The foreground for the selected glyph.</param>
            <param name="characterFont">The font to use with the control.</param>
            <param name="visibleColumns">The number of columns to show. The control will be this wide plus 1.</param>
            <param name="visibleRows">The number of rows to show. The control will be this high plus 1.</param>
        </member>
        <member name="M:SadConsole.UI.Controls.CharacterPicker.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.CharacterPicker.OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.CharacterPicker.ProcessMouse(SadConsole.Input.MouseScreenObjectState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.CharacterPicker.CreateControlSurface">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.CharacterPicker.UpdateAndRedraw(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.ColorBar">
            <summary>
            A color bar control.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.ColorBar.ColorChanged">
            <summary>
            Raised when the <see cref="P:SadConsole.UI.Controls.ColorBar.SelectedColor"/> value changes.
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.ColorBar._positions">
            <summary>
            Internal use by theme.
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.ColorBar._colorSteps">
            <summary>
            Internal use by theme.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.ColorBar.StartingColor">
            <summary>
            Gets or sets the color on the left-side of the bar.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.ColorBar.EndingColor">
            <summary>
            Gets or sets the color on the right-side of the bar.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.ColorBar.SelectedColor">
            <summary>
            The selected color.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.ColorBar.SelectedPosition">
            <summary>
            The position on the bar currently selected.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorBar.#ctor(System.Int32)">
            <summary>
            Creates a new color bar with the specified width.
            </summary>
            <param name="width">The width of the bar.</param>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorBar.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorBar.ProcessMouse(SadConsole.Input.MouseScreenObjectState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorBar.UpdateAndRedraw(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.ColorPicker">
            <summary>
            Displays a rectangle gradient area between <see cref="F:SadRogue.Primitives.Color.Black"/> and a target color, and <see cref="F:SadRogue.Primitives.Color.White"/> and a target color.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.ColorPicker.SelectedColorChanged">
            <summary>
            Raised when <see cref="P:SadConsole.UI.Controls.ColorPicker.SelectedColor"/> changes value.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.ColorPicker.SelectedColor">
            <summary>
            The color selected by the user. A shade of <see cref="P:SadConsole.UI.Controls.ColorPicker.MasterColor"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.ColorPicker.MasterColor">
            <summary>
            The main color being shown that all gradients are generated from.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorPicker.#ctor(System.Int32,System.Int32,SadRogue.Primitives.Color)">
            <summary>
            Creates a new panel with the specified width, height, and master color.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="color"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorPicker.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.ColorPicker.ProcessMouse(SadConsole.Input.MouseScreenObjectState)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.FileDirectoryListbox">
            <summary>
            A listbox control that displays the file system.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.CurrentFolder">
            <summary>
            The current folder displayed by the listbox.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.FileFilter">
            <summary>
            A *.* wildcard filesystem filter. Use <code>;</code> to split multiple filters.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.OnlyRootAndSubDirs">
            <summary>
            When <see langword="true"/>, only allows navigation from the root folder of the original value provided to <see cref="P:SadConsole.UI.Controls.FileDirectoryListbox.CurrentFolder"/> and below; otherwise <see langword="false"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.HideNonFilterFiles">
            <summary>
            When <see langword="true"/>, only displays files that match <see cref="P:SadConsole.UI.Controls.FileDirectoryListbox.FileFilter"/>; otherwise <see langword="false"/> to display all files.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.HighlightedExtentions">
            <summary>
            When <see langword="true"/>, only displays files that match <see cref="P:SadConsole.UI.Controls.FileDirectoryListbox.FileFilter"/>; otherwise <see langword="false"/> to display all files.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.FileDirectoryListbox.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the control and uses <see cref="T:SadConsole.UI.Controls.FileDirectoryListboxItem"/> as the item theme.
            </summary>
            <param name="width">The width of the control.</param>
            <param name="height">The height of the control.</param>
        </member>
        <member name="M:SadConsole.UI.Controls.FileDirectoryListbox.#ctor(System.Int32,System.Int32,SadConsole.UI.Controls.ListBoxItemTheme)">
            <summary>
            Creates a new instance of the control with the specified item theme.
            </summary>
            <param name="width">The width of the control.</param>
            <param name="height">The height of the control.</param>
            <param name="itemTheme">The theme to use for the items.</param>
        </member>
        <member name="M:SadConsole.UI.Controls.FileDirectoryListbox.OnItemAction">
            <summary>
            Navigates a directory if a directory is selected. Raises the <see cref="E:SadConsole.UI.Controls.ListBox.SelectedItemExecuted"/> event.
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.FileDirectoryListbox.FauxDirectory">
            <summary>
            A listbox item container that represents a fake directory, such as <c>..</c>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.FauxDirectory.Name">
            <summary>
            The name of the directory.
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.FileDirectoryListbox.HighlightedExtFile">
            <summary>
            A listbox item container that represents a highlighted file.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListbox.HighlightedExtFile.Name">
            <summary>
            The name of the file.
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.FileDirectoryListboxItem">
            <summary>
            Displays files and directories in various colors.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.DirectoryAppNormal">
            <summary>
            The appearance of a directory in normal state.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.DirectoryAppMouseOver">
            <summary>
            The appearance of a directory when the mouse is over it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.DirectoryAppSelected">
            <summary>
            The appearance of a directory when selected.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.DirectoryAppSelectedOver">
            <summary>
            The appearance of a directory when selected and the mouse is over it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.FileAppNormal">
            <summary>
            The appearance of a file in normal state.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.FileAppMouseOver">
            <summary>
            The appearance of a file when the mouse is over it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.FileAppSelected">
            <summary>
            The appearance of a file when selected.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.FileAppSelectedOver">
            <summary>
            The appearance of a file when selected and the mouse is over it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.HighExtAppNormal">
            <summary>
            The appearance of a highlighted file in normal state.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.HighExtAppMouseOver">
            <summary>
            The appearance of a highlighted file when the mouse is over it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.HighExtAppSelected">
            <summary>
            The appearance of a highlighted file when selected.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.FileDirectoryListboxItem.HighExtAppSelectedOver">
            <summary>
            The appearance of a highlighted file when selected and the mouse is over it.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.FileDirectoryListboxItem.RefreshTheme(SadConsole.UI.Colors)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.FileDirectoryListboxItem.Draw(SadConsole.UI.Controls.ControlBase,SadRogue.Primitives.Rectangle,System.Object,SadConsole.UI.Controls.ControlStates)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.HueBar">
            <summary>
            Displays the color hues on a bar.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.HueBar.ColorChanged">
            <summary>
            Raised when the <see cref="P:SadConsole.UI.Controls.HueBar.SelectedColor"/> value changes.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.HueBar.SelectedColor">
            <summary>
            The selected color.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.HueBar.SelectedPosition">
            <summary>
            The position on the bar currently selected.
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.HueBar._positions">
            <summary>
            Internal use by theme.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.HueBar.#ctor(System.Int32)">
            <summary>
            Creates a new hue bar control.
            </summary>
            <param name="width">The width of the bar.</param>
        </member>
        <member name="M:SadConsole.UI.Controls.HueBar.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.HueBar.ProcessMouse(SadConsole.Input.MouseScreenObjectState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.HueBar.UpdateAndRedraw(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.Table">
            <summary>
            A scrollable table control.
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.Cell">
            <summary>
            A basic cell used in the Table control
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Position">
            <summary>
            Contains the real position value when other cells are not being rendered
            This is used to obtain the real cell from mouse interactions.
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell._row">
            <summary>
            Contains the real row value and column value when other cells are not being rendered
            This is used to obtain the real cell from mouse interactions.
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell._column">
            <summary>
            Contains the real row value and column value when other cells are not being rendered
            This is used to obtain the real cell from mouse interactions.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Row">
            <summary>
            The row this cell is part of
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Column">
            <summary>
            The column this cell is part of
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Height">
            <summary>
            The height of the row this cell is part of
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Width">
            <summary>
            The width of the column this cell is part of
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Foreground">
            <summary>
            The foreground color used by the cell
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Background">
            <summary>
            The background color used by the cell
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.StringValue">
            <summary>
            The text shown within the cell, empty string when no value.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Value">
            <summary>
            The value of the cell, .ToString() method is shown as the text result within the cell.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.IsVisible">
            <summary>
            Set to false if the cell should not be rendered within the table (default IsVisible sadconsole behaviour),
            If an entire row or column IsVislbe is set to false in the layout, it will skip this row/column entirely (differs from default behaviour)
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Settings">
            <summary>
            The setting options used by the cell to define its layout
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.InternalCreate(System.Int32,System.Int32,SadConsole.UI.Controls.Table,System.Object,System.Boolean)">
            <summary>
            Internal use only. This is used by the table and the theme to create new cell instances.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.op_Equality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.op_Inequality(SadConsole.UI.Controls.Table.Cell,SadConsole.UI.Controls.Table.Cell)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Equals(SadConsole.UI.Controls.Table.Cell)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.CopyAppearanceFrom(SadConsole.UI.Controls.Table.Cell)">
            <summary>
            Copies the appearance of the cell passed to this method, onto the this cell.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.SetFieldValue``1(SadConsole.UI.Controls.Table.Cell,``0,``0@,``0,System.Boolean)">
            <summary>
            Helper to set the underlying field value with some checks.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cell"></param>
            <param name="previousValue"></param>
            <param name="field"></param>
            <param name="newValue"></param>
            <param name="usedForLayout"></param>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.Cell.Options">
            <summary>
            A collection of settings that are used by <see cref="T:SadConsole.UI.Controls.Table.Cell"/>
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlignment">
            <summary>
            The horizontal text alignment setting; Default: left
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlignment">
            <summary>
            The vertical text alignment setting; Default: left
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.UseFakeLayout">
            <summary>
            Defines if the cell should also trigger the fake layout event if the option is enabled on the table; Default: false
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.MaxCharactersPerLine">
            <summary>
            The maximum characters this cell can show per line; Default: cell width
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.Interactable">
            <summary>
            Defines if the cell can interact with mouse events; Default: true
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.Selectable">
            <summary>
            Defines if the cell can be selected by the mouse; Default: true
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.SelectionMode">
            <summary>
            Defines the selection visual mode when the cell is selected; Default: single
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cell.Options.HoverMode">
            <summary>
            Defines the hover visual mode when the cell is hovered over by the mouse; Default: single
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Options.#ctor(SadConsole.UI.Controls.Table)">
            <summary>
            Creates new options based on the default values of the table
            </summary>
            <param name="table"></param>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign">
            <summary>
            Alignment enum for the horizontal axis
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign.Left">
            <summary>
            Text will be aligned to the left side of the cell
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign.Center">
            <summary>
            Text will be aligned within the center of the cell
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Options.HorizontalAlign.Right">
            <summary>
            Text will be aligned to the right side of the cell
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign">
            <summary>
            Alignment enum for the vertical axis
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign.Top">
            <summary>
            Text will be aligned to the top of the cell
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign.Center">
            <summary>
            Text will be aligned in the center of the cell
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.Cell.Options.VerticalAlign.Bottom">
            <summary>
            Text will be aligned to the bottom of the cell
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Options.op_Equality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Options.op_Inequality(SadConsole.UI.Controls.Table.Cell.Options,SadConsole.UI.Controls.Table.Cell.Options)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Options.Equals(SadConsole.UI.Controls.Table.Cell.Options)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Options.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.Cell.Options.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.Cells">
            <summary>
            The cells collection used to modify the table cells
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.DefaultForeground">
            <summary>
            The default foreground color used for the table foreground and newly created cells
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.DefaultBackground">
            <summary>
            The default background color used for the table background and newly created cells
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.DefaultCellSize">
            <summary>
            The default size a cell gets when it is newly created
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.DefaultHoverMode">
            <summary>
            The default visual hovering mode when hovering over cells
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.DefaultSelectionMode">
            <summary>
            The default visual selection mode when selecting a cell
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.UseMouse">
            <summary>
            When <see langword="true"/>, this object will use the mouse; otherwise <see langword="false"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.CurrentMouseCell">
            <summary>
            Returns the cell the mouse is over, if <see cref="P:SadConsole.UI.Controls.Table.UseMouse"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.SelectedCell">
            <summary>
            Returns the current selected cell
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.DrawFakeCells">
            <summary>
            By default, only cells that have been modified in anyway will be rendered on the table control.
            Turn this off, if the whole table should draw as many cells as it fits with their default layout.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.OnCellEnter">
            <summary>
            Fires an event when a cell is entered by the mouse.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.OnCellExit">
            <summary>
            Fires an event when a cell is exited by the mouse.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.SelectedCellChanged">
            <summary>
            Fires an event when the selected cell has changed.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.OnCellLeftClick">
            <summary>
            Fires an event when a cell is left clicked.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.OnCellRightClick">
            <summary>
            Fires an event when a cell is right clicked.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.OnCellDoubleClick">
            <summary>
            Fires an event when a cell is double clicked.
            </summary>
        </member>
        <member name="E:SadConsole.UI.Controls.Table.OnDrawFakeCell">
            <summary>
            Called when a fake cells is being drawn, you can use this to modify the cell layout.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.VerticalScrollBar">
            <summary>
            The vertical scrollbar, use the SetupScrollBar method with Vertical orientation to initialize it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.HorizontalScrollBar">
            <summary>
            The horizontal scrollbar, use the SetupScrollBar method with Horizontal orientation to initialize it.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.IsVerticalScrollBarVisible">
            <summary>
            Returns true if the vertical scroll bar is currently visible.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.IsHorizontalScrollBarVisible">
            <summary>
            Returns true if the horizontal scroll bar is currently visible.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.VerticalScrollBarMaximum">
            <summary>
            The updated maximum value, incase the scrollbar object's maximum value is not yet updated by the theme.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.HorizontalScrollBarMaximum">
            <summary>
            The updated maximum value, incase the scrollbar object's maximum value is not yet updated by the theme.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.AutoScrollOnCellSelection">
            <summary>
            By default the table will automatically scroll to the selected cell if possible.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.VisibleRowsTotal">
            <summary>
            The total rows visible in the table.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.VisibleRowsMax">
            <summary>
            The maximum amount of rows that can be shown in the table.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.VisibleColumnsTotal">
            <summary>
            The total columns visible in the table.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.VisibleColumnsMax">
            <summary>
            The maximum amount of columns that can be shown in the table.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new table with the default SadConsole colors, and cell size of (1 width, 1 height)
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new table with custom cell width and cell height params; Uses the default SadConsole colors
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="cellWidth"></param>
            <param name="cellHeight"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.#ctor(System.Int32,System.Int32,System.Int32,SadRogue.Primitives.Color,SadRogue.Primitives.Color,System.Int32)">
            <summary>
            Creates a new table with extra params to set the base default values of the table
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="cellWidth"></param>
            <param name="defaultForeground"></param>
            <param name="defaultBackground"></param>
            <param name="cellHeight"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.DrawFakeCell(SadConsole.UI.Controls.Table.Cell)">
            <summary>
            Called when a fake cell is being drawn, this fake cell cannot be added to the table when it is modified.
            This method can only be used to modify the cell layout when drawn, and thus will not count as a new cell within the table.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.SetupScrollBar(SadConsole.Orientation,System.Int32,SadRogue.Primitives.Point)">
            <summary>
            Configures the associated <see cref="P:SadConsole.UI.Controls.Table.VerticalScrollBar"/>.
            </summary>
            <param name="orientation">The orientation of the scrollbar.</param>
            <param name="size"></param>
            <param name="position">The position of the scrollbar.</param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.ShowHideScrollBar(SadConsole.UI.Controls.ScrollBar)">
            <summary>
            Shows the scroll bar when there are too many items to display; otherwise, hides it.
            </summary>
            <param name="scrollBar"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.ScrollToSelectedItem">
            <summary>
            Scrolls the list to the item currently selected.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.SyncScrollAmountOnResize">
            <summary>
            When a cell is resized after the bar has been scrolled, it must be updated with the new values for the rendering.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.StartRenderYPos">
            <summary>
            The row the rendering should start at
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.StartRenderXPos">
            <summary>
            The column the rendering should start at
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.OnMouseIn(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.OnLeftMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.OnRightMouseClicked(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.OnMouseExit(SadConsole.UI.Controls.ControlBase.ControlMouseState)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.CellEventArgs">
            <summary>
            Cell args for a table event
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.CellEventArgs.Cell">
            <summary>
            The cell that triggered this event
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.CellChangedEventArgs">
            <inheritdoc/>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.CellChangedEventArgs.PreviousCell">
            <summary>
            The original cell before the event was triggered
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.TableCells">
            <summary>
            A collection class that contains all the cells of the <see cref="T:SadConsole.UI.Controls.Table"/> and methods to modify them.
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.TableCells._hiddenIndexes">
            <summary>
            Contains all rows and columns that aren't rendered
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Item(System.Int32,System.Int32)">
            <summary>
            Gets or creates a new cell on the specified row and column
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.MaxRow">
            <summary>
            The maximum row in the table.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.MaxColumn">
            <summary>
            The maximum column in the table.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.HeaderRow">
            <summary>
            True if row 0 should be the header of the table, and remain at the top when vertical scrolling.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Count">
            <summary>
            The amount of cells currently in the table.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Row(System.Int32,System.Boolean)">
            <summary>
            Sets the visibility of the entire row
            </summary>
            <param name="row"></param>
            <param name="visible"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Column(System.Int32,System.Boolean)">
            <summary>
            Sets the visibility of the entire column
            </summary>
            <param name="column"></param>
            <param name="visible"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Column(System.Int32)">
            <summary>
            Get the layout for the given column
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Row(System.Int32)">
            <summary>
            Get the layout for the given row
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the given row and col
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Select(System.Int32,System.Int32)">
            <summary>
            Sets the specified cell as the selected cell if it exists.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Deselect">
            <summary>
            Deselects the current selected cell.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Remove(System.Int32,System.Int32)">
            <summary>
            Removes a cell from the table.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Clear(System.Boolean)">
            <summary>
            Resets all the cells data
            </summary>
            <param name="clearLayoutOptions"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.ClearContent(System.Boolean)">
            <summary>
            Removes all rows and columns except the header if applicable
            </summary>
            <param name="clearLayoutOptionsForContent"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.GetCellPosition(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32,System.Int32)">
            <summary>
            Get's the cell position on the control based on the row and column
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="rowSize"></param>
            <param name="columnSize"></param>
            <param name="verticalScrollBarValue"></param>
            <param name="horizontalScrollbarValue"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.GetSizeOrDefault(System.Int32,SadConsole.UI.Controls.Table.TableCells.Layout.LayoutType)">
            <summary>
            Get the size of the column or row or the default if no layout exists, without allocating a new layout object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.TableCells.Layout">
            <summary>
            Defines the layout for a row or a column defined in <see cref="P:SadConsole.UI.Controls.Table.Cells"/>
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Layout.Size">
            <summary>
            The size of the row or column
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Layout.Foreground">
            <summary>
            The foreground color used by the row or column
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Layout.Background">
            <summary>
            The background color used by the row or column
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Layout.Settings">
            <summary>
            The setting options used by the row or column
            </summary>
        </member>
        <member name="P:SadConsole.UI.Controls.Table.TableCells.Layout.HasCustomSettings">
            <summary>
            True if the Settings property has been accessed before.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Layout.Remove">
            <summary>
            Removes this entire layout from the table.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Layout.SetLayout(System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)">
            <summary>
            Set a default layout to be used for each new cell
            </summary>
            <param name="size"></param>
            <param name="foreground"></param>
            <param name="background"></param>
            <param name="settings"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Layout.SetLayoutInternal(System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)">
            <summary>
            Sets the layout without adjusting cells or setting the table dirty
            </summary>
            <param name="size"></param>
            <param name="foreground"></param>
            <param name="background"></param>
            <param name="settings"></param>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.TableCells.Layout.Mode">
            <summary>
            Defines several visual modes
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.TableCells.Layout.Mode.Single">
            <summary>
            Only a single cell will be visualized
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.TableCells.Layout.Mode.None">
            <summary>
            Nothing will be visualized
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.TableCells.Layout.Mode.EntireRow">
            <summary>
            The entire row of the cell will be visualized
            </summary>
        </member>
        <member name="F:SadConsole.UI.Controls.Table.TableCells.Layout.Mode.EntireColumn">
            <summary>
            The entire column of the cell will be visualized
            </summary>
        </member>
        <member name="T:SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable">
            <summary>
            An enumerable range that contains the layouts of all the rows and columns defined by the size of the range method within <see cref="P:SadConsole.UI.Controls.Table.Cells"/>
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable.SetLayout(System.Nullable{System.Int32},System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)">
            <summary>
            Sets the layout of all the columns and rows for the given params
            </summary>
            <param name="size"></param>
            <param name="foreground"></param>
            <param name="background"></param>
            <param name="settings"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.TableCells.Layout.RangeEnumerable.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:SadConsole.UI.Controls.Table.UpdateAndRedraw(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:SadConsole.UI.Controls.TableExtensions">
            <summary>
            Extensions used for the <see cref="T:SadConsole.UI.Controls.Table"/>
            </summary>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Range(SadConsole.UI.Controls.Table.TableCells,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a range of cells that fits the given parameter values.
            </summary>
            <param name="cells"></param>
            <param name="startRow"></param>
            <param name="startCol"></param>
            <param name="endRow"></param>
            <param name="endCol"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.ForEach(System.Collections.Generic.IEnumerable{SadConsole.UI.Controls.Table.Cell},System.Action{SadConsole.UI.Controls.Table.Cell})">
            <summary>
            Executes an action on each cell.
            </summary>
            <param name="range"></param>
            <param name="action"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.SetLayout(SadConsole.UI.Controls.Table.Cell,System.Nullable{SadRogue.Primitives.Color},System.Nullable{SadRogue.Primitives.Color},SadConsole.UI.Controls.Table.Cell.Options)">
            <summary>
            Sets the layout for the cell.
            </summary>
            <param name="cell"></param>
            <param name="foreground"></param>
            <param name="background"></param>
            <param name="settings"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Resize(SadConsole.UI.Controls.Table.Cell,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Resizes the entire column and row to the specified sizes.
            If no sizes are specified for both row and column, the cell will be reset to the default size.
            </summary>
            <param name="cell"></param>
            <param name="rowSize"></param>
            <param name="columnSize"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Select(SadConsole.UI.Controls.Table.Cell)">
            <summary>
            Sets the cell as the selected cell.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Deselect(SadConsole.UI.Controls.Table.Cell)">
            <summary>
            Incase this cell is the selected cell, it will unselect it.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Column(SadConsole.UI.Controls.Table.TableCells,System.Int32[])">
            <summary>
            Get the layout for the given columns.
            </summary>
            <param name="cells"></param>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Row(SadConsole.UI.Controls.Table.TableCells,System.Int32[])">
            <summary>
            Get the layout for the given rows.
            </summary>
            <param name="cells"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:SadConsole.UI.Controls.TableExtensions.Remove(SadConsole.UI.Controls.Table.Cell)">
            <summary>
            Removes the cell from its table.
            </summary>
            <param name="cell"></param>
        </member>
        <member name="T:SadConsole.UI.Windows.ColorPickerPopup">
            <summary>
            A window that allows a user to select a color in various ways.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Windows.ColorPickerPopup.SelectedColor">
            <summary>
            The color selected.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Windows.ColorPickerPopup.PreviousColors">
            <summary>
            An array of colors previously selected.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Windows.ColorPickerPopup.#ctor">
            <summary>
            Creates a new instance of the window.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Windows.ColorPickerPopup.DrawBorder">
            <summary>
            Draws the border lines around the controls.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Windows.ColorPickerPopup.AddPreviousColor(SadRogue.Primitives.Color)">
            <summary>
            Adds a color to the array of previous colors.
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:SadConsole.UI.Windows.ColorPickerPopup.Show(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:SadConsole.UI.Windows.GlyphSelectPopup">
            <summary>
            A popup window that displays the glyphs of a font.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Windows.GlyphSelectPopup.Show(SadConsole.IFont,SadRogue.Primitives.Point)">
            <summary>
            Shows a modal version of this popup.
            </summary>
            <param name="font">The font to display.</param>
            <param name="fontSize">The size of the font.</param>
        </member>
        <member name="M:SadConsole.UI.Windows.GlyphSelectPopup.AddRootComponent(SadConsole.Input.Keys)">
            <summary>
            Adds a root component to SadConsole that displays the popup window when the specified key is pressed.
            </summary>
            <param name="key">The key to display the popup with.</param>
        </member>
        <member name="M:SadConsole.UI.Windows.GlyphSelectPopup.AddRootComponent(SadConsole.Input.Keys,SadConsole.IFont,SadRogue.Primitives.Point)">
            <summary>
            Adds a root component to SadConsole that displays the popup window with a specific font and font size, when the specified key is pressed.
            </summary>
            <param name="key">The key to display the popup with.</param>
            <param name="font">The font to display.</param>
            <param name="fontSize">The size of the font.</param>
        </member>
        <member name="M:SadConsole.UI.Windows.GlyphSelectPopup.#ctor(System.Int32,System.Int32,SadConsole.IFont,SadRogue.Primitives.Point)">
            <summary>
            Creates a new instance of this popup with the specified width, height, font, and font size.
            </summary>
            <param name="width">The width of the window.</param>
            <param name="height">The height of the window.</param>
            <param name="font">The font to use for the window and character picker.</param>
            <param name="fontSize">The font size of the window.</param>
        </member>
        <member name="M:SadConsole.UI.Windows.GlyphSelectPopup.DrawBorder">
            <summary>
            Redraws the border, title, and lines.
            </summary>
        </member>
        <member name="T:SadConsole.UI.Windows.OtherColorsPopup">
            <summary>
            A window that displays all known colors.
            </summary>
        </member>
        <member name="P:SadConsole.UI.Windows.OtherColorsPopup.SelectedColor">
            <summary>
            The selected color.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Windows.OtherColorsPopup.#ctor">
            <summary>
            Creates a new instance of this window with size 40, 20.
            </summary>
        </member>
        <member name="M:SadConsole.UI.Windows.OtherColorsPopup.DrawBorder">
            <summary>
            Draws the border around the controls.
            </summary>
        </member>
    </members>
</doc>
